apply plugin: 'com.android.application'
apply plugin: 'realm-android'

def final packageName = 'air.com.snagfilms'
def final customApplicationId = 'SnagFilms'
def final hostName = "www.snagfilms.com"

def final appVersionName = "1.0.31"
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        google()
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'io.fabric'
repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
    google()
}

android {
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId packageName
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 3042073
        versionName appVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        renderscriptTargetApi 26
        renderscriptSupportModeEnabled true
        useLibrary 'org.apache.http.legacy'
    }
    flavorDimensions "green"
    productFlavors {
        mobile {
            dimension = "green"
            minSdkVersion 21
            compileSdkVersion 23
            targetSdkVersion 25
        }
        tv {

            minSdkVersion 21
            compileSdkVersion 25
            versionCode 3010010
            versionName "1.0.18"
            dimension = "green"
            aaptOptions {
                cruncherEnabled = false
            }
        }
    }
    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        stagAssumeHungarianNotation: 'false',
                        stagGeneratedPackageName   : 'com.viewlift.stag.generated',
                        stagDebug                  : 'true' // Generates output to Gradle console
                ]
            }
        }
    }
    sourceSets {
        mobile {
            java.srcDirs = ['src/mobile/java']
            res.srcDirs = ['src/mobile/res']
            manifest.srcFile 'src/mobile/AndroidManifest.xml'
        }
        tv {
            java.srcDirs = ['src/tv/java']
            res.srcDirs = ['src/tv/res']
            manifest.srcFile 'src/tv/AndroidManifest.xml'
        }
    }
    buildTypes {
        debug {
            multiDexEnabled true
            resValue "string", "package_name", "${packageName}"
            resValue "string", "app_name", "${customApplicationId}"
            resValue "string", "app_cms_search_provider", "${packageName}.provider"
            resValue "string", "app_cms_app_host_name", "${hostName}"
            resValue "string", "app_cms_app_version", "${appVersionName}"
            buildConfigField "String", "AUTHORITY", "\"${packageName}.provider\""
        }
        release {
            multiDexEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            resValue "string", "package_name", "${packageName}"
            resValue "string", "app_name", "${customApplicationId}"
            resValue "string", "app_cms_search_provider", "${packageName}.provider"
            resValue "string", "app_cms_app_host_name", "${hostName}"
            resValue "string", "app_cms_app_version", "${appVersionName}"
            buildConfigField "String", "AUTHORITY", "\"${packageName}.provider\""
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'third_party/java_src/error_prone/project/annotations/Google_internal.gwt.xml'
        exclude 'error_prone/Annotations.gwt.xml'
        exclude 'third_party/java_src/error_prone/project/annotations/Annotations.gwt.xml'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile "com.google.dexmaker:dexmaker:$rootProject.ext.dexmakerVersion"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:$rootProject.ext.dexmakerVersion"
    androidTestCompile "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestCompile "junit:junit:$rootProject.ext.junitVersion"
    compile "com.android.support:support-compat:$rootProject.ext.androidsupportVersion"
    compile("com.android.support:appcompat-v7:$rootProject.ext.androidsupportVersion", {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-vector-drawable'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-vector-drawable'
        exclude group: 'com.android.support', module: 'animated-vector-drawable'
        exclude group: 'com.android.support', module: 'com.android.support:support-core-utils'
        exclude group: 'com.android.support', module: 'com.android.support:support-core-ui'
        exclude group: 'com.android.support', module: 'support-compat'
    })
    compile("com.android.support:support-fragment:$rootProject.ext.androidsupportVersion", {
        exclude group: 'com.android.support', module: 'support-compat'
    })
    compile "com.android.support:support-annotations:$rootProject.ext.androidsupportVersion"
    compile("com.android.support:animated-vector-drawable:$rootProject.ext.androidsupportVersion", {
        exclude group: 'com.android.support', module: 'support-compat'
    })
    compile "com.android.support:support-vector-drawable:$rootProject.ext.androidsupportVersion"
    compile "com.android.support:support-core-ui:$rootProject.ext.androidsupportVersion"
    compile "com.android.support:support-media-compat:$rootProject.ext.androidsupportVersion"
    compile "com.android.support:support-v4:$rootProject.ext.androidsupportVersion"
    compile "com.android.support:design:$rootProject.ext.androidsupportVersion"
    compile "com.android.support:cardview-v7:$rootProject.ext.androidsupportVersion"
    compile "com.android.support:appcompat-v7:$rootProject.ext.androidsupportVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.androidsupportVersion"
    compile "com.android.support:gridlayout-v7:$rootProject.ext.androidsupportVersion"
    compile "com.android.support.constraint:constraint-layout:$rootProject.ext.androidsupportconstraintVersion"
    tvCompile "com.android.support:leanback-v17:$rootProject.ext.androidsupportVersion"
    tvCompile "com.android.support.constraint:constraint-layout:$rootProject.ext.androidsupportconstraintVersion"
    tvCompile 'com.github.bumptech.glide:glide:3.4.+'
    compile "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    compile "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    compile "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
    compile "com.squareup.okhttp3:okhttp:$rootProject.ext.okHttp3Version"
    compile "com.squareup.okhttp3:okhttp-urlconnection:$rootProject.ext.okHttp3Version"
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit2Version"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit2Version"
    compile "io.reactivex:rxandroid:$rootProject.ext.rxandroidVersion"
    compile "io.reactivex:rxjava:$rootProject.ext.rxjavaVersion"
    compile "com.android.support:multidex:1.0.1"
    compile "com.google.ads.interactivemedia.v3:interactivemedia:$rootProject.ext.googleAdsInteractiveMediaV3"
    compile "com.google.android.gms:play-services-ads:$rootProject.ext.googlePlayServicesVersion"
    compile "com.google.android.gms:play-services-analytics:$rootProject.ext.googlePlayServicesVersion"
    mobileCompile "com.google.android.gms:play-services-gcm:$rootProject.ext.googlePlayServicesVersion"
    compile "com.google.android.gms:play-services-auth:$rootProject.ext.googlePlayServicesVersion"
    compile "jp.wasabeef:glide-transformations:$rootProject.ext.glideTransformationVersion"
    compile("com.crashlytics.sdk.android:crashlytics:$rootProject.ext.crashlyticsVersion") {
        transitive = true
    }
    mobileCompile "com.urbanairship.android:urbanairship-sdk:$rootProject.ext.urbanAirshipVersion"
    compile "com.jakewharton:butterknife:$rootProject.ext.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.ext.butterknifeVersion"
    compile("com.facebook.android:facebook-android-sdk:$rootProject.ext.facebookSdkVersion", {
        exclude group: 'com.android.support', module: 'customtabs'
    })
    compile "com.apptentive:apptentive-android:$rootProject.ext.apptentiveVersion"
    provided "javax.annotation:jsr250-api:$rootProject.ext.jsr250_apiVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    compile "com.android.support:mediarouter-v7:$rootProject.ext.androidsupportVersion"
    implementation "com.google.android.gms:play-services-cast-framework:$rootProject.ext.googlePlayServicesVersion"
    compile "com.vimeo.stag:stag-library:$rootProject.ext.stagVersion"
    annotationProcessor "com.vimeo.stag:stag-library-compiler:$rootProject.ext.stagVersion"
    compile "com.appsflyer:af-android-sdk:$rootProject.ext.appsFlyerVersion"
    compile "com.google.android.gms:play-services-tagmanager:$rootProject.ext.googlePlayServicesVersion"
    tvCompile project(path: ':firetvcustomkeyboard')
    compile "com.android.support:percent:$rootProject.ext.androidsupportVersion"
    compile "com.jakewharton.threetenabp:threetenabp:$rootProject.ext.threetenBpVersion"
    compile "com.vimeo.stag:stag-library:$rootProject.ext.stagVersion"
    compile "org.jsoup:jsoup:$rootProject.ext.jsoupVersion"
    annotationProcessor "com.vimeo.stag:stag-library-compiler:$rootProject.ext.stagVersion"
    compile project(':exoplayer-library')
    compile project(':library')
    compile project(':htmlspanner')
    compile project(path: ':exoplayer-extension-vp9')
}

apply plugin: 'com.google.gms.google-services'
